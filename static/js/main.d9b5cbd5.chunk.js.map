{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","filter","onFilter","onAppliedQuery","useState","query","setQuery","debouncedSetAppliedQuery","useCallback","debounce","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","user","setUser","isLoading","setIsLoading","userId","useEffect","getUser","finally","href","email","name","App","setFilter","appliedQuery","setAppliedQuery","visibleTodos","setVisibleTodos","setSelectedTodo","includes","getVisibleTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9b5cbd5.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\n// import cn from 'classnames';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  onSelectedTodo?: (val: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedTodo = () => { },\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          todos.map(todo => (\n            <tr\n              key={todo.id}\n              data-cy=\"todo\"\n              className=\"\"\n            >\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed && (\n                  <span\n                    className=\"icon\"\n                    data-cy=\"iconCompleted\"\n                  >\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p\n                  className={`has-text-${todo.completed ? 'success' : 'danger'}`}\n                >\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onSelectedTodo(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={`far fa-eye${selectedTodo?.id === todo.id ? '-slash' : ''}`}\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))\n        }\n      </tbody>\n    </table>\n  );\n}\n","import { useCallback, useState } from 'react';\nimport debounce from 'lodash.debounce';\n\nimport { Filter } from '../../types/Filter';\nimport { TyChangeEvtInputElmt } from '../../types/General';\n\ntype Props = {\n  filter: Filter;\n  onFilter?: (val: Filter) => void;\n  onAppliedQuery?: (val: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  onFilter = () => { },\n  onAppliedQuery = () => { },\n}) => {\n  const [query, setQuery] = useState('');\n  const debouncedSetAppliedQuery = useCallback(debounce(\n    onAppliedQuery, 1000,\n  ), []);\n\n  const handleQueryChange = (event: TyChangeEvtInputElmt) => {\n    setQuery(event.target.value);\n    debouncedSetAppliedQuery(event.target.value);\n  };\n\n  const handleBtnDelete = () => {\n    setQuery('');\n    debouncedSetAppliedQuery('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={(event) => onFilter(event.target.value as Filter)}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleQueryChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={handleBtnDelete}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo;\n  onSelectedTodo?: (todo: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSelectedTodo = () => { },\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    id, title, completed, userId,\n  }: Todo = selectedTodo;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(userId)\n    .then(setUser)\n    .finally(() => {\n      setIsLoading(false);\n    });\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={`has-text-${completed ? 'success' : 'danger'}`}>\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","// eslint-disable max-len\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { Filter } from './types/Filter';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nconst getVisibleTodos = (\n  todos: Todo[],\n  query: Todo['title'],\n  filter: Filter,\n) => {\n  switch (filter) {\n    case Filter.ACTIVE:\n      return todos.filter(\n        todo => !todo.completed && todo.title.includes(query),\n      );\n\n    case Filter.COMPLETED:\n      return todos.filter(\n        todo => todo.completed && todo.title.includes(query),\n      );\n\n    case Filter.ALL:\n    default:\n      return todos.filter(\n        todo => todo.title.includes(query),\n      );\n  }\n};\n\nexport const App: React.FC = () => {\n  const [filter, setFilter] = useState<Filter>(Filter.ALL);\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then(todos => {\n          setVisibleTodos(getVisibleTodos(todos, appliedQuery, filter));\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }, 200);\n  }, [filter, appliedQuery]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                onFilter={setFilter}\n                onAppliedQuery={setAppliedQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {(!isLoading && visibleTodos.length > 0)\n                && (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}